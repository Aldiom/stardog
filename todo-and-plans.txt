
main dish:
	splitout views <nasty stuff>
	quad trees (hardmode, after vector and view splitout)
	wormholes/star gates to other systems. (medium mode ?, after static class)
	multyplayer <hard mode, dependant on code structure, vectors and views split, also a better ui>
http://code.google.com/p/legume/
	a particle engine for explotions, engine stuff. <medium stuff, after view splitout>
	better ui (nasty mode ?, after view splitout)
	A save function ?

side dish:
	make planet erv of a Gravless class so stargate will not be effected by graf and not be a planet.
	make the space structure class that will erv from gravless as well with a custom 
	http://www.pygame.org/docs/ref/draw.html#pygame.draw.polygon shape
	posibility to eject parts <easy mode>
	someway to target ships, parts and planets <easy mode>
	zoom in out option for radar <medium mode ?>
	weapon heat generation <easy mode>
	some early implementation of space $ <easy mode>
	some early implementation of space $ <easy mode>
	a name to give yourself a name <as a precursor of network play and to get familiair with gui, after view spitout and vectors>
		http://www.cosc.canterbury.ac.nz/greg.ewing/python/Albow/
		http://ocemp.sourceforge.net/guiwidget.html
	the solarsystm.py has lots of basic functionality in a specific class can be put in parent class. this leaves space for starsystem specific stuff such as names and planet locations.
	arming periods for mines


parts:
	A cannon part that will not use energy but ammo <easy mode>
	Space mines <easy mode>
	A radar tah will eventualy suport raytracing. <easy for initial radar>
	a gravity well part. <needs button bind, perhaps later in the form of tractor beam>
	a dockingport part <could be hard>
	a disable beam part <easy mode>
	ship lights <easy mode once particles is done>



unknowns:

	if you will travel long enough you will also reach the next solar system, as in stargate travel.

	The edge of the system is a stupid idea, and can be replaced with a: when over boundry go to next star system independent of direction, will alwais travel to next star system even is only one ajacent

	every planet own part list (it is already so ?)

	a cource line for a ship that will include gravity pulls. <depends on simulator ception>

	astroids in orbits (hard mode, depends on quad tree, simulatorception)

	test if planet orbit is posible and if no what is needed to make it so !

	a orbit calculator <depends on simulator ception>

	simulator ception for calculation of trajectorys, targeting and future positions <hard ?>



DONE
test if solar orbit is posible, <solar orbit is possible did it twice (duality)>
finite engine trust speed <it is done, can be tweaked, but is done (Aat)>
revamp to use vectors <as good as done Aat>

<Duality>

make menu work on fullscreen. only fighter is displayed right left corner. <fixed Duality>

crew:
	add crew?
	and parts for crew quaters.					<part added>
	more crew more efficient ship.
	maybe if crew then heal x per x seconds.
bays:
	a part that is mechanic bay
	a part that is weapons bay
	a part that is the armory
	a part that is a cargo bay
ship:
	every ship a individual mid section that defines what the ship is.
	implement droping mines and implement a part for it that does that?
	or only give the destroyer that capability?
	display ship stats closer to the ship like health energy xp bar can stay where it is?
parts:
	blocks with different shapes so that you can better position parts.
	maybe implement hull plating. some things are worth protecting.
universe:
	make mass count more realisticly. it's not just counted in to heavy.
key-handling:
	some key combinations don't work in menu or other parts of the game.
	thus make key-handling for quiting (for example) be interupt based.

if part die/are killed damage vehicle/ship

particle engine for effects.
